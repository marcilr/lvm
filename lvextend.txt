lvextend.txt
Created Thu Jan 10 13:15:08 AKST 2013
Copyright (C) 2013 by Raymond E. Marcil <marcilr@gmail.com>


lvextend - extend the size of a logical volume
==============================================
lvextend  [--alloc AllocationPolicy] [-A/--autobackup y/n] [-d/--debug]
[-h/-?/--help]  [-i/--stripes  Stripes  [-I/--stripesize   StripeSize]]
{-l/--extents  [+]LogicalExtentsNumber  |  -L/--size  [+]LogicalVolume‐Size[kKmMgGtT]} 
[-t/--test]  [-v/--verbose]  LogicalVolumePath  [Physi‐calVolumePath...]

lvextend  allows you to extend the size of a logical volume.  Extension
of snapshot logical volumes (see lvcreate(8) for information to  create
snapshots) is supported as well.


Examples
========
# lvextend -L12G /dev/myvg/homevol
lvextend -- extending logical volume "/dev/myvg/homevol" to 12 GB
lvextend -- doing automatic backup of volume group "myvg"
lvextend -- logical volume "/dev/myvg/homevol" successfully extended
        
will extend /dev/myvg/homevol to 12 Gigabytes. 

# lvextend -L+1G /dev/myvg/homevol
lvextend -- extending logical volume "/dev/myvg/homevol" to 13 GB
lvextend -- doing automatic backup of volume group "myvg"
lvextend -- logical volume "/dev/myvg/homevol" successfully extended
        
will add another gigabyte to /dev/myvg/homevol. 

tldp.org/


Expand volume
=============
1. Take backup data on volume to expand.

Rsync can be used to make the backup:
# rsync -va --delete /data/myvolume /backups/data/

NOTE: Lack of trailing slash on /data/virtualbox such that the virtualbox directory itself
      will be created under /backups/data/ as needed.

Options:
        -v, --verbose     increase verbosity
        -a, --archive     archive mode; equals -rlptgoD (no -H,-A,-X)
            --delete      delete extraneous files from dest dir

NOTE: Lack of trailing slash on /data/virtualbox such that the virtualbox directory
      itself will be created under /backups/data/ as needed.

Get md5sum of all regular files, sort, and save to MD5SUM
$ find . -type f -exec md5sum {} \; | sort -k2 >> MD5SUM


2. Unmount volume:
# umount /dev/myvg/myvolume

3. The resizefs utility requires e2fsck first:

# e2fsck -f /dev/mygroup/myvolume
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/myvg/myvolume: 48/19660800 files (6.3% non-contiguous), \
67580459/78643200 blocks
#

4. Expand the logical volume using lvextend:

# lvextend -L400G /dev/myvg/myvolume
  Extending logical volume myvolume to 400.00 GiB
  Logical volume myvolume successfully resized
#

In this example myvolume was expanded to 400GB.

5. Use resize2fs to expand ext2/ext3/ext4 filesystem:

# resize2fs /dev/myvg/myvolume 400G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/myvg/myvolume to 104857600 (4k) blocks.
The filesystem on /dev/myvg/myvolume is now 104857600 blocks long.

bornite:/#

In this example myvolume was expanded to 400GB.

6. Mount resized  /dev/myvg/myvolume:

bornite:/# mount /myvg/myvolume/

NOTE: Assume /myvg/myvolume/ is a mount point in fstab.


Thu Jan 10 14:09:00 AKST 2013
=============================
Expand bornite's /dev/data/movies volume from 1000GB to 1100GB.
More space needed.

1. Unmount:
# umount /data/movies

2. The resize2fs utility requires e2fsck first:
bornite:/# e2fsck -f /dev/data/movies
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/data/movies: 899/131072000 files (25.7% non-contiguous), 238050331/262144000 blocks
bornite:/#

3. Expand /dev/data/movies volume to 1100GB:
bornite:/# lvextend -L1100G /dev/data/movies
  Extending logical volume movies to 1.07 TiB
  Logical volume movies successfully resized
root@bornite:/#

4. Expand ext3 filesystem on /dev/data/movies to 1100GB:
bornite:/# resize2fs /dev/data/movies 1100G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/data/movies to 288358400 (4k) blocks.
The filesystem on /dev/data/movies is now 288358400 blocks long.

bornite:/#

288358400 (4k) blocks / 1100 GB = 262144 (4k) blocks / GB

5. Mount /dev/data/movies:
bornite:/# mount /dev/data/movies
bornite:/# ls /data/movies/
2006.wmv                              MD5SUM-20100102-duplicates.txt  Sapphire-20110625.tar.bz2.md5
500kV_Switch.mpg                      NEW_ZEELAND                     Sex and the City
Amchitka4.mpeg                        paris                           SISTERHOOD_TRAVELING_PANTS
Amchitka.wmv                          Pron                            STONE_COLD
angels_and_demons.iso                 README                          THE_SECRET_NTSC
desktop.ini                           $RECYCLE.BIN                    tivo
Heinlein, Robert - Starship Troopers  Remington Steele                TWO_FOR_THE_MONEY
HoldFast.mov                          Robbery1.wmv                    WEDDING_CRASHERS
lost+found                            Sapphire
MD5SUM-20100102                       Sapphire-20110625.tar.bz2
root@bornite:/#

Looks good.


Thu Jan 10 13:38:57 AKST 2013
=============================
Expand bornite's /dev/data/virtualbox volume again.  Updated from 400GB to 500GB.
More space needed.

1. Unmount:
# umount /data/virtualbox/

2. The resize2fs utility requires e2fsck first:
bornite:/# e2fsck -f /dev/data/virtualbox
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/data/virtualbox: 66/26214400 files (10.6% non-contiguous), 94655750/104857600 blocks
bornite:/#

3. Expand /dev/data/virtualbox volume to 500GB:
bornite:/# lvextend -L500G /dev/data/virtualbox
  Extending logical volume virtualbox to 500.00 GiB
  Logical volume virtualbox successfully resized
bornite:/#

----------------------

4. Resize the /dev/data/virtual ext3 filesystem from 400GB to 500GB:

bornite:/# resize2fs /dev/data/virtualbox 500G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/data/virtualbox to 131072000 (4k) blocks.
The filesystem on /dev/data/virtualbox is now 131072000 blocks long.

bornite:/#

Looks good.

NOTE: I had missed capturing this resize2fs on the first pass.
      Had top to reverse engineer the number of 4k blocks:

Determine block size on /dev/data/virtualbox:
  bornite:/# /sbin/dumpe2fs /dev/data/virtualbox | grep 'Block size'
  dumpe2fs 1.41.12 (17-May-2010)
  Block size:               4096
  bornite:/#

How to Find the Block Size
http://www.linfo.org/get_block_size.html

1 gigabyte = 1 073 741 824 bytes

1073741824 bytes / 4096 bytes / block = 262144 blocks per GB
500 GB * 262144 blocks per GB = 131072000 blocks total.

Is there a way to list the number of 4k block on ext3 filesystem?
By default df lists 1k block size.  Think 'df -B4096' or 'df -B 4k' does 4k block size.
This lists 103212332 for /data/virtualbox which is a bit different than the calculated value
above.


5. Mount:
# mount /data/virtualbox/

6. Inspect:
bornite:/# ls /data/virtualbox/
00BACKUPS  ajoite-non-domain  ajoite-non-domain-20130109-ORIG  lost+found  MD5SUM  mohite
bornite:/#

Looks good.


Tue Jan  8 17:02:55 AKST 2013
=============================
I need to expand the /data/virtualbox (300 to 400GB) volumes.
The last ajoite-non-domain machine backup was 37.8GB:

bornite:/data/virtualbox/00BACKUPS$ du -m ajoite-non-domain-20130102.tar.bz2
37854   ajoite-non-domain-20130102.tar.bz2
bornite:/data/virtualbox/00BACKUPS$

bornite:~$ df -h
Filesystem            Size  Used Avail Use% Mounted on
...
/dev/mapper/data-movies
                      985G  893G   42G  96% /data/movies
...
/dev/mapper/data-virtualbox
                      296G  254G   28G  91% /data/virtualbox
...
$

1. Shutdown the windows 7 pro virtual ajoite-non-domain machine, ip 10.1.0.15, located at
/data/virtualbox/ajoite-non-domain/

2. Verify ajoite-non-domain is down:

bornite:~$ ps ax | grep vir
28607 pts/0    S+     0:00 grep vir
bornite:~$

$ ping 10.1.0.15
PING 10.1.0.15 (10.1.0.15) 56(84) bytes of data.
From 10.1.0.65 icmp_seq=2 Destination Host Unreachable
From 10.1.0.65 icmp_seq=3 Destination Host Unreachable
From 10.1.0.65 icmp_seq=4 Destination Host Unreachable
...
^C
--- 10.1.0.15 ping statistics ---
10 packets transmitted, 0 received, +6 errors, 100% packet loss, time 9032ms
pipe 3
bornite:~$ 

Dead as a doornail.   Very good.

3. Rsync /data/virtualbox/ to 2.73TB backu0p raid5 (9650SE-8LPML, unit c5).
bornite:~# rsync -va --delete /data/virtualbox /backups/data/
sending incremental file list
virtualbox/
virtualbox/00BACKUPS/
virtualbox/00BACKUPS/ajoite-non-domain-20130102.tar.bz2
virtualbox/00BACKUPS/ajoite-non-domain-20130102.tar.bz2.md5
virtualbox/ajoite-non-domain/
virtualbox/ajoite-non-domain/ajoite-non-domain-disk1.vdi
virtualbox/ajoite-non-domain/ajoite-non-domain-disk2.vdi
virtualbox/ajoite-non-domain/ajoite-non-domain.vbox
virtualbox/ajoite-non-domain/ajoite-non-domain.vbox-prev
virtualbox/ajoite-non-domain/ajoite-non-domain.vdi
virtualbox/ajoite-non-domain/Logs/
virtualbox/ajoite-non-domain/Logs/VBox.log
virtualbox/ajoite-non-domain/Logs/VBox.log.1
virtualbox/ajoite-non-domain/Logs/VBox.log.2
virtualbox/ajoite-non-domain/Logs/VBox.log.3
virtualbox/ajoite-non-domain/Snapshots/
deleting virtualbox/ajoite-non-domain/Snapshots/2012-09-03T23-06-22-134493000Z.sav
virtualbox/lost+found/
virtualbox/mohite/
virtualbox/mohite/mohite-disk1.vdi
virtualbox/mohite/mohite-disk2.vdi
virtualbox/mohite/mohite-disk3.vdi
virtualbox/mohite/mohite.vbox
virtualbox/mohite/Logs/
virtualbox/mohite/Logs/VBox.log
virtualbox/mohite/Logs/VBox.log.1

sent 149987705372 bytes  received 376 bytes  56738303.67 bytes/sec
total size is 271289789355  speedup is 1.81
bornite:~#


NOTE: Lack of trailing slash on /data/virtualbox such that the virtualbox directory
      itself will be created under /backups/data/ as needed.

Options:
        -v, --verbose     increase verbosity
        -a, --archive     archive mode; equals -rlptgoD (no -H,-A,-X)
            --delete      delete extraneous files from dest dirs

Verify rsync backup:
  root@bornite:/backups/data/virtualbox# find . | wc -l
  38

  root@bornite:/data/virtualbox# find . | wc -l
  38

Get MD5SUMs:
  bornite:/data/virtualbox# find . -type f -exec md5sum {} \; | sort -k2 >> MD5SUM
  bornite:/backups/data/virtualbox# find . -type f -exec md5sum {} \; | sort -k2 >> MD5SUM


MD5SUM files match.

4. Unmount /data/virtualbox

bornite:/$ mount | grep virtualbox
/dev/mapper/data-virtualbox on /data/virtualbox type ext3 (rw)

bornite:/# umount /data/virtualbox/
bornite:/# 

5. Inspect /dev/data/virtualbox
bornite:/# lvdisplay /dev/data/virtualbox
  --- Logical volume ---
  LV Name                /dev/data/virtualbox
  VG Name                data
  LV UUID                91VYOW-aktl-Nsyz-XzIu-9oaM-pyE6-KWvcSM
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                300.00 GiB
  Current LE             76800
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:19
   
bornite:/#


6. The resize2fs utility requires e2fsck first:

bornite:/# e2fsck -f /dev/data/virtualbox
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/data/virtualbox: 48/19660800 files (6.3% non-contiguous), 67580459/78643200 blocks
bornite:/#

Looks good.

7. Expand the /dev/data/virtualbox logical volume from 300GB to 400GB:

bornite:/# lvextend -L400G /dev/data/virtualbox
  Extending logical volume virtualbox to 400.00 GiB
  Logical volume virtualbox successfully resized
bornite:/#

bornite:/# lvdisplay /dev/data/virtualbox
  --- Logical volume ---
  LV Name                /dev/data/virtualbox
  VG Name                data
  LV UUID                91VYOW-aktl-Nsyz-XzIu-9oaM-pyE6-KWvcSM
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                400.00 GiB
  Current LE             102400
  Segments               1
  Allocation             inherit
  Read ahead sectors     auto
  - currently set to     256
  Block device           253:19
   
bornite:/#

Looks good.


8. Resize the /dev/data/virtual ext3 filesystem from 300GB to 400GB:

bornite:/# resize2fs /dev/data/virtualbox 400G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/data/virtualbox to 104857600 (4k) blocks.
The filesystem on /dev/data/virtualbox is now 104857600 blocks long.

bornite:/#

Looks good.

9. Mount resized  /dev/data/virtualbox:

bornite:/# mount /data/virtualbox/

bornite:/# ls /data/virtualbox/
00BACKUPS  ajoite-non-domain  lost+found  MD5SUM  mohite
bornite:/#

Fine work.



Links
=====
11.9. Extending a logical volume
LVM HOWTO
http://tldp.org/HOWTO/LVM-HOWTO/extendlv.html

