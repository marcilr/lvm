volumes.txt
Created Wed Sep  3 11:47:17 AKDT 2008
by Raymond E. Marcil <marcilr@gmail.com>


Configuring 5.45TB RAID6 on 3ware 9650SE-8LPML with logical volumes.


The /dev/VGNAME/LVNAME path is just a convenience symlink to /dev/mapper/...

lvm group: data   (with volumes on bornite's raid6)


Name          Capacity 
======================
00BACKUPS       1460GB
00TARBALLS       100GB
akshena           30GB
chroot             1GB
debs              25GB
irs                1GB
iso               50GB
maps              50GB
movies          1300GB
music            500GB
pdf               20GB
pictures         100GB
rockhounding     100GB
scans            100GB 
svnroot          100GB
usr               10GB
wallpaper          1GB    
       ===============
       Total:   4037GB

1460 + 100 + 30 + 1 + 25 + 5 + 50 + 50 + 1000 + 500 + 5 + 100 + 100 + 100 + 500 + 10 + 1 
  = 4037GB

NOTE: Taken Nov 11, 2010
      All volumes formatted with ext3.



Logical Volume History
======================
History of bornite's logical volumes including creation, resize, and deletion.


Thu Apr 11 09:59:32 AKDT 2013
=============================
Create 25GB encrypted volume on bornite for EncFS FUSE-based cryptographic filesystem storage.

1. 


Wed Apr  3 15:52:27 AKDT 2013
=============================
Increase bornite's /data/pdf from 10GB to 20GB.

1. Unmount /data/pdf
bornite:~# umount /data/pdf/

2. The resizefs utility requires e2fsck first:
bornite:~# e2fsck -f /dev/mapper/data-pdf
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-pdf: 33110/1310720 files (1.2% non-contiguous), 2341908/2621440 blocks
root@bornite:~#

Looks good.

3. Increase size of /data/pdf partition from 10GB to 20GB:

bornite:~# lvextend -L20G /devbornite:~# lvextend -L20G /dev/data/pdf
  Extending logical volume pdf to 20.00 GiB
  Logical volume pdf successfully resized
bornite:~#

4. The resizefs utility requires e2fsck first:
root@bornite:~# e2fsck -f /dev/mapper/data-pdf
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-pdf: 33110/1310720 files (1.2% non-contiguous), 2341908/2621440 blocks
bornite:~# 

Looks good.

5. Resize /data/pdf 10GB from 10GB to 20GB:

bornite:~# resize2fs /dev/mapper/data-pdf 20G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/mapper/data-pdf to 5242880 (4k) blocks.
The filesystem on /dev/mapper/data-pdf is now 5242880 blocks long.

root@bornite:~#

6. Verify 20GB on /data/pdf:
bornite:~# e2fsck -f /dev/mapper/data-pdf
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-pdf: 33110/2621440 files (1.2% non-contiguous), 2383670/5242880 blocks
bornite:~# 

7. Mount /data/pdf:
bornite:~# mount /data/pdf/

8. Inspect /data/pdf:
bornite:~# df -h | grep pdf
/dev/mapper/data-pdf   20G  8.8G   10G  47% /data/pdf
bornite:~#

Looks good!


Sat Mar 30 14:33:36 AKDT 2013
=============================
Create 1GB irs lvm.

1. Create 1GB irs lvm.
bornite:~# lvcreate -n irs --size 1GB data
  Logical volume "irs" created
root@bornite:~#

2. Format irs lvm with ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-irs
mke2fs 1.41.12 (17-May-2010)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
Stride=0 blocks, Stripe width=0 blocks
65536 inodes, 262144 blocks
13107 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=268435456
8 block groups
32768 blocks per group, 32768 fragments per group
8192 inodes per group
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376

Writing inode tables: done                            
Creating journal (8192 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 35 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.

real    0m0.323s
user    0m0.000s
sys     0m0.108s
root@bornite:~#

3. Create /etc/fstab entry:
/etc/fstab:23
/dev/mapper/data-irs          /data/irs          ext3   defaults   0    2

4. Create mount point:
bornite:/# mkdir /data/irs
bornite:/# chown sshfs:sshfs /data/irs/
bornite:/# chmod 775 /data/irs/
bornite:/# chmod g+s /data/irs/

5. Mount /data/irs:
bornite:/# mount /data/irs/

bornite:/# df -h | grep irs
/dev/mapper/data-irs 1008M   34M  924M   4% /data/irs

Looks good.

6. Create samba entry in /etc/samba/smb.conf

i. Add entry to /etc/samba/smb.conf.master:206
#
# irs - Sat Mar 30 14:41:41 AKDT 2013
#
[irs]
  path=/data/irs
  valid users = marcilr,akshena,tivo
  admin users = marcilr,akshena
  read only = No
  create mask = 644
  directory mask = 755
  browseable=yes
  writeable=yes

ii. Generate smb.conf using Samba's test_parm:
/usr/bin/testparm -s /etc/samba/smb.conf.master > /etc/samba/smb.conf

iii. To reread smb.conf restart samba:
bornite:/etc/samba# cd ~
bornite:~# /etc/init.d/samba restart
Stopping Samba daemons: nmbd smbd.
Starting Samba daemons: nmbd smbd.
bornite:~#



Thu Mar 28 12:08:23 AKDT 2013
=============================
Expand /data/movies 200GB from 1.1T to 1.3T.

bornite:~$ df -h | grep movies
/dev/mapper/data-movies
                      1.1T 1008G   21G  98% /data/movies
bornite:~$ 


1. Unmont /data/movies:
bornite:~# umount /data/movies/

2. The resizefs utility required e2fsck first:
bornite:~# e2fsck -f /dev/mapper/data-movies
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-movies: 804/144179200 files (13.6% non-contiguous), 268508353/288358400 blocks
bornite:~#

Looks good.

3. Increase size of /data/movies partition from 1.1TB to 1.3TB:
bornite:~# lvextend -L1300G /dev/data/movies
  Extending logical volume movies to 1.27 TiB
  Logical volume movies successfully resized
bornite:~#

4. The resizefs utility required e2fsck first:
bornite:~# e2fsck -f /dev/mapper/data-movies
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-movies: 804/144179200 files (13.6% non-contiguous), 268508353/288358400 blocks
bornite:~#

Looks good.

5. Resize /data/movies 200GB from 1.1T to 1.3T:

bornite:~# resize2fs /dev/mapper/data-movies 1300G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/mapper/data-movies to 340787200 (4k) blocks.
The filesystem on /dev/mapper/data-movies is now 340787200 blocks long.

bornite:~#

6. Verify 1.3T on /data/movies:
bornite:~# e2fsck -f /dev/mapper/data-movies
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-movies: 804/170393600 files (13.6% non-contiguous), 269330753/340787200 blocks
bornite:~#

7. Mount /data/movies:
bornite:~# mount /data/movies/

8. Inspect /data/movies:
$ df -h | grep movies
/dev/mapper/data-movies
                      1.3T 1008G  208G  83% /data/movies
$

Looks good!


Thu Mar 28 10:18:55 AKDT 2013
=============================
Shrunk /data/svnroot from 500GB to 100GB since only 24GB was being used.

1. Backup /data/svnroot to /backups/data/svnroot:
Backup subversion repos under /data/svnroot:
# rsync -va --stats --progress /data/svnroot /backups/data

2. Get md5sum's to verify copy:
data/svnroot# find . -type f -exec md5sum {} \; | sort -k2 >> MD5SUM
data/svnroot# cat MD5SUM | wc -l
287762
data/svnroot$ md5sum MD5SUM 
48708b1d66bf959fdba75126b27d9348  MD5SUM

backups/data/svnroot# find . -type f -exec md5sum {} \; | sort -k2 >> MD5SUM
backups/data/svnroot# cat MD5SUM | wc -l
287762
backups/data/svnroot$ md5sum MD5SUM
48708b1d66bf959fdba75126b27d9348  MD5SUM

Matching md5sum's.   The backup is solid.

3. Unmount /data/svnroot/
bornite:~# umount /data/svnroot

4. Reduce size of /data/svnroot/ ext3 filesystem.

The resizefs utility required e2fsck first:
bornite:~# e2fsck -f /dev/mapper/data-svnroot
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-svnroot: 305600/65536000 files (1.6% non-contiguous), 8269012/131072000 blocks
bornite:~#

Looks good.

Resize ext3 filesystem on /data/svnroot/ from 500G to 100G with resize2fs.

Resize /data/svnroot/ from 500Gb to 100GB:
bornite:~# resize2fs /dev/mapper/data-svnroot 100G
resize2fs 1.41.12 (17-May-2010)
Resizing the filesystem on /dev/mapper/data-svnroot to 26214400 (4k) blocks.
The filesystem on /dev/mapper/data-svnroot is now 26214400 blocks long.

5. Verify integrity with e2fsck:
bornite:~# e2fsck -f /dev/mapper/data-svnroot
e2fsck 1.41.12 (17-May-2010)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-svnroot: 305602/13107200 files (1.4% non-contiguous), 6621139/26214400 blocks
bornite:~#

6. Mount resized /data/svnroot/
root@bornite:~# mount /data/svnroot/

bornite:~# df -h | grep svnroot
/dev/mapper/data-svnroot
                       99G   24G   70G  26% /data/svnroot
bornite:~#

Looks good /data/svnroot is down to 100GB.


Sat Apr 17 10:41:57 AKDT 2010
=============================
Need to take 500GB from /date/music/ and add to /data/movies/.
Looks likes resize2fs, lvreduce, lvextend are the tools for the job.

bornite:/backups/00BACKUPS# lvdisplay /dev/data/music 
  --- Logical volume ---
  LV Name                /dev/data/music
  VG Name                data
  LV UUID                0UBPs0-hgAX-6Htx-hAm2-S5sX-lT2o-Vrzdud
  LV Write Access        read/write
  LV Status              available
  # open                 1
  LV Size                1000.00 GB
  Current LE             256000
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:1

bornite:~# lvdisplay /dev/data/movies 
  --- Logical volume ---
  LV Name                /dev/data/movies
  VG Name                data
  LV UUID                dkZcFm-SQ5S-3eKm-EZHl-2QM7-z0LF-3KAv11
  LV Write Access        read/write
  LV Status              available
  # open                 1
  LV Size                500.00 GB
  Current LE             128000
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:12
   

1. Take backup of /data
bornite:/backups/00BACKUPS# ./backup
SRC: /data/
SRCTXT: -data
BASE: /backups/00BACKUPS
TAR: /backups/00BACKUPS/20100417-data
LAST: 20100331-data
Creating backup...

building file list ...
3494433 files to consider
deleting movies/tivo/Tivo Transfers/
00TARBALLS/commercial/uex/
00TARBALLS/commercial/uex/README
        1181 100%    0.00kB/s    0:00:00 (xfer#1, to-check=368260/3494433)
00TARBALLS/commercial/uex/uex-1.2.0.1_amd64.tar.gz
    34124103 100%   44.40MB/s    0:00:00 (xfer#2, to-check=368253/3494433)
...
svnroot/uaa/db/revs/4914
        5753 100%    4.16kB/s    0:00:01 (xfer#726, to-check=26641/3494433)
svnroot/uaa/db/transactions/

Number of files: 3494433
Number of files transferred: 726
Total file size: 1898261218435 bytes
Total transferred file size: 288036885984 bytes
Literal data: 294481483232 bytes
Matched data: 0 bytes
File list size: 78069431
File list generation time: 899.677 seconds
File list transfer time: 0.000 seconds
Total bytes sent: 294595533875
Total bytes received: 16820

sent 294595533875 bytes  received 16820 bytes  34481834.22 bytes/sec
total size is 1898261218435  speedup is 6.44

real	145m13.693s
user	34m28.005s
sys	24m23.611s
bornite:~#

2. Unmount /data/music
bornite:~# umount /data/music

3. Reduce size of /data/music/ ext3 filesystem.
Resize ext3 filesystem on /data/music from 1000G to 500G with resize2fs.

The resizefs utility required e2fsck first:
bornite:~# e2fsck -f /dev/mapper/data-music
e2fsck 1.40-WIP (14-Nov-2006)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-music: 81832/131072000 files (3.1% non-contiguous), 
73899375/262144000 blocks
bornite:~#

Resize /data/music from 1TB to 500GB:
bornite:~# resize2fs /dev/mapper/data-music 500G
resize2fs 1.40-WIP (14-Nov-2006)
Resizing the filesystem on /dev/mapper/data-music to 131072000 (4k) blocks.
The filesystem on /dev/mapper/data-music is now 131072000 blocks long.

4. Reduce /dev/data/music volume from 1TB to 500GB:
bornite:~# lvreduce -L500G /dev/data/music
  WARNING: Reducing active logical volume to 500.00 GB
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce music? [y/n]: y
  Reducing logical volume music to 500.00 GB
  Logical volume music successfully resized
bornite:~# 

bornite:~# lvdisplay /dev/data/music 
  --- Logical volume ---
  LV Name                /dev/data/music
  VG Name                data
  LV UUID                0UBPs0-hgAX-6Htx-hAm2-S5sX-lT2o-Vrzdud
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                500.00 GB
  Current LE             128000
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:1

5. Mount /dev/mapper/music to /data/music/

6. Check filecount:
bornite:~# ls -l /data/music/ | wc -l
5328

bornite:~# ls -l /backups/00BACKUPS/20100417-data/music/ | wc -l
5328

Reduction of /data/music from 1TB to 500GB looks good!

7. Unmount /data/movies/
bornite:~# umount /data/movies
umount: /data/movies: device is busy
umount: /data/movies: device is busy

Stopping samba did the trick:
bornite:/etc/init.d# ./samba stop
Stopping Samba daemons: nmbd smbd.
bornite:/etc/init.d# umount /data/movies/

8. Increase size of /data/movies from 500GB to 1TB:
bornite:~# lvextend -L1000G /dev/data/movies
  Extending logical volume movies to 1000.00 GB
  Logical volume movies successfully resized

9. Resize /data/movies from 500GB to 1TB:
bornite:~# e2fsck -f /dev/mapper/data-movies
e2fsck 1.40-WIP (14-Nov-2006)
Pass 1: Checking inodes, blocks, and sizes
Pass 2: Checking directory structure
Pass 3: Checking directory connectivity
Pass 4: Checking reference counts
Pass 5: Checking group summary information
/dev/mapper/data-movies: 635/65536000 files (19.1% non-contiguous), 
115844725/131072000 blocks

bornite:~# resize2fs /dev/mapper/data-movies 1000G
resize2fs 1.40-WIP (14-Nov-2006)
Resizing the filesystem on /dev/mapper/data-movies to 262144000 (4k) blocks.
The filesystem on /dev/mapper/data-movies is now 262144000 blocks long.

Looks good.

10. Mount /data/movies

bornite:~# mount /data/movies/
bornite:~# vgdisplay /dev/data/movies 
  Invalid volume group name: data/movies
bornite:~# vgdisplay /dev/mapper/data-movies 
  Invalid volume group name: mapper/data-movies
bornite:~# lvdisplay /dev/data/movies 
  --- Logical volume ---
  LV Name                /dev/data/movies
  VG Name                data
  LV UUID                dkZcFm-SQ5S-3eKm-EZHl-2QM7-z0LF-3KAv11
  LV Write Access        read/write
  LV Status              available
  # open                 1
  LV Size                1000.00 GB
  Current LE             256000
  Segments               2
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:12

Looks good.

bornite:~# ls -l /data/movies/tivo/ | wc -l
149

bornite:~# ls -l /backups/00BACKUPS/20100417-data/movies/tivo/ | wc -l
149

bornite:/etc/init.d# ./samba start
Starting Samba daemons: nmbd smbd.

Yeh hah.  Mission accomplished.


Fri Jan 22 09:34:47 AKST 2010
=============================
Want to take 500GB from /data/movies volume and add to /data/00BACKUPS.
Looks like resize2fs to shrink the ext3 filesystem then lvreduce to shrink the volume.

1. Take backup of /data/movies volume.
bornite:/backups/00BACKUPS# ./backup
SRC: /data/
SRCTXT: -data
BASE: /backups/00BACKUPS
TAR: /backups/00BACKUPS/20100122-data
LAST: 20100116-data
Creating backup...
building file list ...
building file list ...
3155382 files to consider
deleting 00BACKUPS/terminus/20091002/
deleting 00TARBALLS/multimedia/asciidoc-8.4.2/vim/syntax/asciidoc.vim
deleting 00TARBALLS/multimedia/asciidoc-8.4.2/vim/syntax/
...
wallpaper/.Trash-1000/files/thetismoon2k72-1152.jpg
      320795 100%    1.64MB/s    0:00:00 (xfer#2313, to-check=251/3155382)

Number of files: 3155382
Number of files transferred: 2313
Total file size: 1440494066358 bytes
Total transferred file size: 1862636020 bytes
Literal data: 1862636020 bytes
Matched data: 0 bytes
File list size: 70223160
File list generation time: 999.416 seconds
File list transfer time: 0.000 seconds
Total bytes sent: 1933193324
Total bytes received: 53204

sent 1933193324 bytes  received 53204 bytes  896890.06 bytes/sec
total size is 1440494066358  speedup is 745.12

real    38m17.510s
user    1m1.512s
sys     2m31.109s
bornite:/backups/00BACKUPS# 

bornite:/backups/00BACKUPS/20100122-data/movies# find . | wc -l
506

bornite:/data/movies# find . | wc -l
506

Backup looks good.

2. Resize ext3 filesystem on /data/movies from 1000G to 500G with resize2fs.

bornite:~# resize2fs /dev/mapper/data-movies 500G

3. Restore /data/movies data.

bornite:~# time rsync -va /backups/00BACKUPS/20100122-data/movies/ /data/movies
building file list ... done
./
500kV_Switch.mpg
MD5SUM-20100102
MD5SUM-20100102-duplicates.txt
DVD_VIDEO/
...
tivo/Wide Angle - Back to School (Recorded Wed Jul 18 2007 01 00AM KAKM).TiVo

sent 149497836615 bytes  received 10480 bytes  56552996.82 bytes/sec
total size is 149479555911  speedup is 1.00

real    44m3.900s
user    16m50.227s
sys     16m56.428s
bornite:~#

3. Reduce /dev/data/movies logical volume from 1TB to 500GB:

bornite:~# lvreduce -L500G /dev/data/movies
  WARNING: Reducing active logical volume to 500.00 GB
  THIS MAY DESTROY YOUR DATA (filesystem etc.)
Do you really want to reduce movies? [y/n]: y
  Reducing logical volume movies to 500.00 GB
  Logical volume movies successfully resized
bornite:~#


FIXME: Need some more data here.

marcilr@bornite:~$ uname -a
Linux bornite 2.6.18-6-486 #1 Thu Nov 5 15:58:19 UTC 2009 i686 GNU/Linux


Sat Aug  4 16:38:16 AKDT 2012
=============================
o Create 300GB virtualbox volume for virtual machines:

bornite:~# lvcreate -n virtualbox --size 300g data
  Logical volume "virtualbox" created
bornite:~#

o Format virtualbox  volume ext3:
bornite:~# mkfs.ext3 /dev/mapper/data-virtualbox

o Mount /data/virtualbox:
bornite:~# mkdir /data/virtualbox
bornite:~# chown sshfs:sshfs /data/virtualbox/
bornite:~# chmod 775 /data/virtualbox
bornite:~# chmod g+s /data/virtualbox
bornite:~# mount /dev/data/virtualbox /data/virtualbox

o Update /etc/fstab with /data/virtualdocs mount:
/dev/mapper/data-virtualdocs        /data/virtualdocs        ext3   defaults   0    2

o Test /data/virtualbox mount:
bornite:~# umount /data/virtualbox
bornite:~# mount /data/virtualbox
bornite:~# mount | grep virtualbox
/dev/mapper/data-virtualbox on /data/virtualbox type ext3 (rw)
bornite:~#

Looks good!


Mon Jul 30 12:59:28 AKDT 2012
=============================
o Created 5GB htdocs volume group for use with apache installed under /usr/local/httpd.

o Created 5GB htdocs volume:
bornite:~# lvcreate -n htdocs --size 5g data
  Logical volume "htdocs" created
bornite:~#

o Format htdocs volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-htdocs

o Mount /data/htdocs:
bornite:~# mkdir /data/htdocs
bornite:~# chown sshfs:sshfs /data/htdocs/
bornite:~# chmod 775 /data/htdocs
bornite:~# chmod g+s /data/htdocs
bornite:~# mount /dev/data/htdocs /data/htdocs

o Update /etc/fstab with /data/htdocs mount:
/dev/mapper/data-htdocs        /data/htdocs        ext3   defaults   0    2

o Test /data/htdocs mount:
bornite:~# umount /data/htdocs
bornite:~# mount /data/htdocs
bornite:~# mount | grep htdocs
/dev/mapper/data-htdocs on /data/htdocs type ext3 (rw)
bornite:~#

Looks good!


Mon Apr 25 16:45:39 AKDT 2011
=============================
Removed empty /data/docs logical volume.

bornite:~# umount /data/docs

bornite:~# ls -l /dev/data/docs 
lrwxrwxrwx 1 root root 21 2011-04-25 06:56 /dev/data/docs -> /dev/mapper/data-doc

bornite:~# lvremove /dev/data/docs
Do you really want to remove active logical volume "docs"? [y/n]: y
  Logical volume "docs" successfully removed
bornite:~#

NOTE: This procedure required commenting out /dev/mapper/data-docs
in /etc/fstab and and restarted to get /data/docs in non-used state.


Fri Nov 12 09:52:40 AKST 2010
=============================
Create /data/pdf logical volume.  Migrate data from /data/docs/pdf/*.

Create 5GB pdf volume:
bornite:~# lvcreate -n pdf --size 5g data
  Logical volume "pdf" created
bornite:~#

Format docs volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-pdf

Mount /data/docs:
bornite:~# mkdir /data/pdf
bornite:~# chown sshfs:sshfs /data/pdf/
bornite:~# chmod 775 /data/pdf/
bornite:~# chmod g+s /data/pdf/
bornite:~# mount /dev/data/pdf /data/pdf/

Update /etc/fstab with /data/pdf mount:
/dev/mapper/data-pdf          /data/pdf          ext3   defaults   0    2

Test /data/pdf mount:
bornite:~# umount /data/pdf
bornite:~# mount /data/pdf
bornite:~# mount | grep pdf
/dev/mapper/data-pdf on /data/pdf type ext3 (rw)

Looks good!


Sync /data/docs/pdf/* files to /data/pdf/:
bornite:~# time rsync -va --progress --stats /data/docs/pdf/ /data/pdf/
building file list ... 
2030 files to consider
./
0032.pdf
        9756 100%    0.00kB/s    0:00:00 (xfer#1, to-check=2028/2030)
...
weatherization/sharp@ruralcap.com_20081021_122834.pdf
      153779 100%    6.98MB/s    0:00:00 (xfer#1777, to-check=0/2030)

Number of files: 2030
Number of files transferred: 1777
Total file size: 724272109 bytes
Total transferred file size: 724271984 bytes
Literal data: 724271984 bytes
Matched data: 0 bytes
File list size: 45293
File list generation time: 0.874 seconds
File list transfer time: 0.000 seconds
Total bytes sent: 724487561
Total bytes received: 40632

sent 724487561 bytes  received 40632 bytes  30830986.94 bytes/sec
total size is 724272109  speedup is 1.00

real    0m23.121s
user    0m5.060s
sys     0m3.088s
bornite:~#

bornite:/data/docs/pdf# find . | wc -l
2030
bornite:/data/docs/pdf#

bornite:/data/pdf# find . | wc -l
2031
bornite:/data/pdf#

Dynamite!


Wed Jun  2 14:06:28 AKDT 2010
=============================
Increase /data/docs/ from 1GB to 5GB.

Umount /data/docs:
bornite:~# umount /data/docs

bornite:~# lvremove /dev/data/docs
Do you really want to remove active logical volume "docs"? [y/n]: y
  Logical volume "docs" successfully removed
bornite:~# 

Create 5GB docs volume:
bornite:~# lvcreate -n docs --size 5g data
  Logical volume "docs" created
bornite:~#

Format docs volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-docs

Mount /data/docs:
bornite:~# mount /dev/data/docs  /data/docs/

bornite:~# df -m
...
/dev/mapper/data-docs
                          5040       139      4646   3% /data/docs

Looks good.



Tue Mar 30 15:04:40 AKDT 2010
=============================
Create 50GB /data/maps for maps.

Create 50GB maps volume:
bornite:~# lvcreate -n maps --size 50g data
  Logical volume "maps" created

Format maps volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-maps

Create mount point:
bornite:~# mkdir /data/maps

Update /etc/fstab:
/dev/mapper/data-maps        /data/maps         ext3   defaults   0    2

Mount /data/maps:
bornite:~# mount /data/maps

bornite:~# df -m
...
/dev/mapper/data-maps
                         50397       180     47657   1% /data/maps


Looks good.


Mon Mar  8 07:51:56 AKST 2010
=============================
Create 1GB /data/docs for 1994-2009 LinuxJournal archive.

Create 1G chroot volume:
bornite:~# lvcreate -n docs --size 1g data
  Logical volume "docs" created

Format chroot volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-docs

Create mount point:
bornite:~# mkdir /data/chroot

Update /etc/fstab:
/dev/mapper/data-docs         /data/docs         ext3   defaults   0    2

Mount /data/docs:
bornite:~# mount /data/docs

bornite:~# df -m
...
/dev/mapper/data-docs
                          1008        34       924   4% /data/docs

Looks good.


Sun Mar  7 17:37:39 AKST 2010
=============================
Create /data/chroot for dhcp, dns, and apache chroot directories.
Only creating 1GB size as only working on dhcp for now.

Create 1G chroot volume:
bornite:~# lvcreate -n chroot --size 1g data
  Logical volume "chroot" created

Format chroot volume ext3:
bornite:~# time mkfs.ext3 /dev/mapper/data-chroot

Create mount point:
bornite:~# mkdir /data/chroot

Update /etc/fstab:
/dev/mapper/data-chroot       /data/chroot       ext3   defaults   0    2

Mount /data/chroot:
bornite:~# mount /data/chroot

bornite:~# df -m
...
/dev/mapper/data-chroot
                          1008        34       924   4% /data/chroot

Looks good.


Sat Jan 23 09:03:19 AKST 2010
=============================
The rsync restore of /dev/data/00BACKUPS-OLD (raid5 on /mnt) to 
/dev/data/00BACKUPS (raid6 on /data/00BACKUPS)
took overnight to complete.

bornite:/data/00BACKUPS# find . | wc -l
2798706

bornite:/mnt# find . | wc -l
2798706

Filecounts match looking good.

Delete temporary 00BACKUPS-OLD volume used to restore 00BACKUPS.
bornite:/# umount /mnt
umount: /mnt: device is busy
umount: /mnt: device is busy

Nothing using 00BACKUPS-OLD volume. The umount worked from bornite's 
console in the garage.

bornite:~# lvremove /dev/data/00BACKUPS-OLD
Do you really want to remove active logical \
volume "00BACKUPS-OLD"? [y/n]: y
  Logical volume "00BACKUPS-OLD" successfully removed
bornite:~#




Fri Jan 22 13:18:37 AKST 2010
=============================
Expand /data/00BACKUPS from 1000GB to 1500GB

1. Rename /data/00BACKUPS logical volume.
bornite:/# umount /data/00BACKUPS/
bornite:/# lvrename /dev/data/00BACKUPS /dev//data/00BACKUPS-OLD
  Renamed "00BACKUPS" to "00BACKUPS-OLD" in volume group "data"
bornite:/#

bornite:/# lvscan
...
  ACTIVE            '/dev/data/00BACKUPS-OLD' [1000.00 GB] inherit
...

2. Create 1.5TB /data/00BACKUPS logical backup.
bornite:~# lvcreate -n 00BACKUPS --size 1500GB data
  Logical volume "00BACKUPS" created

3. Create ext3 filesystem on /data/00BACKUPS logical backup.
bornite:~# mkfs.ext3 /dev/mapper/data-00BACKUPS

4. Restore data to /data/00BACKUPS from 00BACKUPS-OLD
bornite:/# mount /data/00BACKUPS
bornite:/# mount /dev/data/00BACKUPS-OLD /mnt
bornite:/# time rsync -va --stats --progress /mnt/ /data/00BACKUPS
building file list ...
2798706 files to consider
./
20090401-musicbrainz.tar.bz2
    13114161 100%   44.24MB/s    0:00:00 (xfer#1, to-check=2798704/2798706)
README
        1243 100%    4.14kB/s    0:00:00 (xfer#2, to-check=2798703/2798706)
TODO
         199 100%    0.64kB/s    0:00:00 (xfer#3, to-check=2798702/2798706)
...
wallpaper/20091021-wallpaper.tar.bz2
   177160803 100%   31.56MB/s    0:00:05 (xfer#2124598, to-check=0/2798706)

Number of files: 2798706
Number of files transferred: 2124598
Total file size: 941179990796 bytes
Total transferred file size: 922161110683 bytes
Literal data: 922161110683 bytes
Matched data: 0 bytes
File list size: 63315990
File list generation time: 826.336 seconds
File list transfer time: 0.000 seconds
Total bytes sent: 922435861161
Total bytes received: 49491888

sent 922435861161 bytes  received 49491888 bytes  25023677.33 bytes/sec
total size is 941179990796  speedup is 1.02

real    617m15.789s
user    106m28.711s
sys     64m51.679s
bornite:/#


Fri Jan 22 10:30:28 AKST 2010
=============================
Reduce /data/movies logical volume from 1000G to 500G.

1. Create /data/movies logical volume with 500G.
bornite:~# lvcreate -n movies --size 500GB data
  Logical volume "movies" created

2. Backed up /data with /backups/00BACKUPS/backup script.
Verified movies backed up to  /backups/00BACKUPS/20100122-data/movies
Verified filecount.

3. Unmount /data/movies.
bornite:~# umount /data/movies

4. Remove /data/movies logical volume.
bornite:/# lvremove /dev/data/movies 
Do you really want to remove active logical volume "movies"? [y/n]: y
  Logical volume "movies" successfully removed
bornite:~# 

5. Recreate /data/movies logical volume with 500G.
bornite:~# lvcreate -n movies --size 500GB data
  Logical volume "movies" created

Format /data/movies/ volume:
bornite:~# mkfs.ext3 /dev/mapper/data-movies

6. Restore /date/movies data from backup.
bornite:~# mount /data/movies
bornite:~# lvscan
...
  ACTIVE            '/dev/data/movies' [500.00 GB] inherit
...
bornite:~# time rsync -va /backups/00BACKUPS/20100122-data/movies/ /data/movies
building file list ... done
./
500kV_Switch.mpg
...
tivo/Wide Angle - Back to School (Recorded Wed Jul 18 2007 01 00AM KAKM).TiVo

sent 149497836615 bytes  received 10480 bytes  56552996.82 bytes/sec
total size is 149479555911  speedup is 1.00

real    44m3.900s
user    16m50.227s
sys     16m56.428s
bornite:~#

Recreation of /data/movies from 1000G to 500G successful.


Mon Nov 23 10:23:01 AKST 2009
=============================
Create /data/debs/ volume:
bornite:~# lvcreate -n debs --size 25g data
  Logical volume "debs" created

Format /data/iso/ volume:
  bornite:~# mkfs.ext3 /dev/mapper/data-debs

Add /etc/fstab entry for /data/debs:
  /dev/mapper/data-debs          /data/debs          ext3   defaults   0    2


Mon Nov 23 10:08:13 AKST 2009
=============================
Create /data/iso/ volume:
bornite:~# lvcreate -n iso --size 50g data 
  Logical volume "iso" created

Format /data/iso/ volume:
  bornite:~# mkfs.ext3 /dev/mapper/data-iso

Add /etc/fstab entry for /data/iso:
  /dev/mapper/data-iso          /data/iso          ext3   defaults   0    2


Wed Jul 22 14:02:02 AKDT 2009
=============================
Create /data/usr/ volume:

bornite:~# lvcreate -n usr --size 10g data
  Logical volume "usr" created

Format /data/usr/ volume:
  bornite:~# mkfs.ext3 /dev/mapper/data-usr

Add /etc/fstab entry for /data/usr:
  /dev/mapper/data-usr          /data/usr          ext3   defaults   0    2


Tue Jan 13 20:42:58 AKST 2009
=============================
bornite:~# lvcreate -n 00TARBALLS --size 100GB data
  Logical volume "00TARBALLS" created

bornite:~# lvcreate -n rockhounding --size 100GB data
  Logical volume "rockhounding" created

bornite:~# mkfs.ext3 /dev/mapper/data-00TARBALLS
bornite:~# mkfs.ext3 /dev/mapper/data-rockhounding

Remove logical volume
---------------------
bornite:/# lvremove /dev/data/mp3
Do you really want to remove active logical volume "mp3"? [y/n]: y
  Logical volume "mp3" successfully removed

Tue Jan 13 20:40:22 AKST 2009
=============================
bornite:/# umount /data/00TARBALLS
bornite:/# lvremove /dev/data/00TARBALLS
Do you really want to remove active logical volume "00TARBALLS"? [y/n]: y
  Logical volume "00TARBALLS" sucessfully removed
bornite:/#


Display volumes
---------------
  --- Logical volume ---
  LV Name                /dev/data/mp3
  VG Name                datagroup
  LV UUID                Dohq3V-Zzz0-Dzgw-ccOR-xjC1-Qdos-nuaWVJ
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                1000.00 GB
  Current LE             256000
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:0
   
  --- Logical volume ---
  LV Name                /dev/data/svnroot
  VG Name                datagroup
  LV UUID                j6Iljy-Yc42-aqnl-ppYU-3dLY-lFIa-MruD0b
  LV Write Access        read/write
  LV Status              available
  # open                 0
  LV Size                500.00 GB
  Current LE             128000
  Segments               1
  Allocation             inherit
  Read ahead sectors     0
  Block device           253:1


Create filesystem on logical volume
===================================
bornite:/# time mkfs.ext3 /dev/mapper/data-mp3
mke2fs 1.40-WIP (14-Nov-2006)
Filesystem label=
OS type: Linux
Block size=4096 (log=2)
Fragment size=4096 (log=2)
131072000 inodes, 262144000 blocks
13107200 blocks (5.00%) reserved for the super user
First data block=0
Maximum filesystem blocks=0
8000 block groups
32768 blocks per group, 32768 fragments per group
16384 inodes per group
Superblock backups stored on blocks: 
        32768, 98304, 163840, 229376, 294912, 819200, 884736, 1605632, 2654208, 
        4096000, 7962624, 11239424, 20480000, 23887872, 71663616, 78675968, 
        102400000, 214990848

Writing inode tables:  258/8000
...
Creating journal (32768 blocks): done
Writing superblocks and filesystem accounting information: done

This filesystem will be automatically checked every 34 mounts or
180 days, whichever comes first.  Use tune2fs -c or -i to override.
bornite:~#


Mount volume
============
bornite:~# mount -t ext3 /dev/data/mp3 /mnt
bornite:~# df -h
Filesystem            Size  Used Avail Use% Mounted on
/dev/md0               73G   19G   51G  27% /
tmpfs                 443M     0  443M   0% /lib/init/rw
udev                   10M   80K   10M   1% /dev
tmpfs                 443M     0  443M   0% /dev/shm
/dev/mapper/data--vol-mp3
                      985G  200M  935G   1% /mnt
